generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model attachment {
  id        String   @id
  name      String
  url       String   @db.Text
  courseId  String
  createdAt DateTime @default(now())
  updatedAt DateTime
  course    course   @relation(fields: [courseId], references: [id], onDelete: Cascade, map: "Attachment_courseId_fkey")

  @@index([courseId], map: "Attachment_courseId_idx")
}

model category {
  id     String   @id @default(uuid())
  name   String   @unique(map: "Category_name_key")
  course course[]
}

model course {
  id          String       @id
  userId      String
  title       String       @db.Text
  description String?      @db.Text
  imageUrl    String?      @db.Text
  isPublished Boolean      @default(false)
  categoryId  String?
  typeId      String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  priceId     String?
  attachment  attachment[]
  category    category?    @relation(fields: [categoryId], references: [id], map: "Course_categoryId_fkey")
  price       price?       @relation(fields: [priceId], references: [id], map: "Course_priceId_fkey")
  type        type?        @relation(fields: [typeId], references: [id], map: "Course_typeId_fkey")

  @@index([categoryId], map: "Course_categoryId_idx")
  @@index([priceId], map: "Course_priceId_idx")
  @@index([typeId], map: "Course_typeId_idx")
}

model price {
  id     String   @id @default(uuid())
  cost   String   @unique(map: "Price_cost_key")
  period String
  course course[]
}

model type {
  id     String   @id
  format String   @db.Text
  size String @db.VarChar(20)
  course course[]
}
